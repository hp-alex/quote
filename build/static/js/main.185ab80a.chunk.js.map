{"version":3,"sources":["redux/quote/types.js","redux/quote/reducer.js","redux/rootReducer.js","redux/store.js","container/style.js","components/Quotesboard/style.js","components/Quotesboard/index.jsx","components/Menu/style.js","components/Menu/index.jsx","redux/quote/actions.js","container/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["changeUrl","changeBG","changeQuote","changeAuthor","INITIAL_STATE","arrButtons","background","quote","author","url","reducer","state","action","type","types","rootReducer","combineReducers","quoteReducer","store","createStore","devToolsEnhancer","HomeContainer","styled","div","Image","img","Display","WhiteBoard","QuoteSpace","Wrapper","AuthorSpace","Quotesboard","MenuView","active","Button","button","TopMenu","FooterMenu","CenterMenu","MenuItems","MenuAction","Menu","array","useSelector","dispatch","useDispatch","onClickFunction","value","useState","door","setDoor","map","ind","onClick","String","Home","loading","setLoading","useEffect","axios","get","then","res","changeBg","data","contents","quotes","catch","err","console","log","style","position","left","top","color","size","src","alt","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.185ab80a.chunk.js","sourcesContent":["export const changeUrl = 'CHANGE_URL'\r\nexport const changeBG = 'CHANGE_BG'\r\nexport const changeQuote = 'CHANGE_QUOTE'\r\nexport const changeAuthor = 'CHANGE_AUTHOR'","import * as types from './types'\r\nconst INITIAL_STATE = {\r\n    arrButtons: ['Inspire', 'Management', 'Sports', 'Life', 'Funny', 'Love', 'Art'],\r\n    background: '',\r\n    quote: '',\r\n    author: '',\r\n    url: 'Sports'\r\n};\r\n\r\nconst reducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case types.changeUrl: \r\n            return { ...state, url: action.url }\r\n        case types.changeBG:\r\n            return { ...state, background: action.background}\r\n        case types.changeQuote:\r\n            return { ...state, quote: action.quote}\r\n        case types.changeAuthor:\r\n            return { ...state, author: action.author}\r\n        default: return state;\r\n    }\r\n}\r\nexport default reducer","import { combineReducers } from 'redux'\r\nimport quoteReducer from './quote/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    quote: quoteReducer\r\n});\r\n\r\nexport default rootReducer;","import rootReducer from './rootReducer'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\nimport {createStore} from 'redux'\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store","import styled from 'styled-components'\r\n\r\nexport const HomeContainer = styled.div`\r\n        height: 100vh;\r\n        width: 100vw;\r\n        z-index: 0;\r\n\r\n`;\r\nexport const Image = styled.img`\r\n        height: 100vh;\r\n        width: 100vw;\r\n        z-index: -1;\r\n`;\r\nexport const Display = styled.div`\r\n        height: 100%;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        z-index: 0;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n`;","import styled from 'styled-components'\r\nexport const WhiteBoard = styled.div`\r\n    min-height: 300px;\r\n    padding: 10px 10px;\r\n    max-width: 40%;\r\n    background-color: rgba(100,100,100,0.9);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;    \r\n    border-radius: 20px;\r\n    @media (max-width: 480px){\r\n        width: 100%;\r\n        height: 50%;\r\n    };\r\n    @media (max-width: 370px){\r\n        width: 100%;\r\n        height: 100%;\r\n    };\r\n    @media (min-width: 481px) and (max-width: 768px){\r\n        width: 70%;\r\n        height: 50%;\r\n    };\r\n    @media (min-width: 769px) and (max-width: 992px){\r\n        width: 40%;\r\n        height: 40%;\r\n    }\r\n`;\r\nexport const QuoteSpace = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    background-color: transparent;\r\n    border-radius: 20px;\r\n    @media (max-width: 480){\r\n        width: 70%;\r\n    }\r\n\r\n`;\r\nexport const Wrapper = styled.div`\r\n         border-left: 2px dashed white;\r\n         border-bottom: 2px dashed white;\r\n         width: 80%;\r\n         height: 200px;\r\n         display: flex;\r\n         justify-content: center;\r\n         align-items: center;\r\n         padding: 0px 20px;\r\n         color: white;\r\n         overflow: auto;\r\n         text-indent: 10px;\r\n         text-align: justify;\r\n         ::-webkit-scrollbar {\r\n            width: 5px;\r\n            background-color: transparent;\r\n            \r\n        }\r\n        ::-webkit-scrollbar-thumb {\r\n            \r\n           background-color: white;\r\n            \r\n        }\r\n       \r\n`;\r\nexport const AuthorSpace = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 0px 20px;\r\n    color: white;\r\n    font-style: italic;\r\n    font-weight: 500;\r\n    @media (max-width: 480px){\r\n        padding: 0px 0px;\r\n    };\r\n    @media (max-width: 370px){\r\n        padding: 0px 0px;\r\n        overflow: auto;\r\n    };\r\n\r\n`;","import { AuthorSpace, QuoteSpace, WhiteBoard, Wrapper } from './style'\r\n\r\nconst Quotesboard = ({quote, author}) => {\r\n   // const quote = \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n     //  const quote='Xolbf dk n nj kjnkjn lj iukklnjlnljnjlnjlml njn j nj nkj n kj nkj n hbnkljn kjn kj nkj n kjn kj nj nj n; n;l nin  nj ljn l nih njk njlfjs;dfkdasda jnj nj jn jn kjn kj nj nlj nh ksda sdasas;lkdsd fsfdsek'  \r\n  return (\r\n        <WhiteBoard>\r\n            <QuoteSpace>\r\n                <Wrapper>\r\n                    <p>{quote}</p>\r\n                </Wrapper>\r\n            </QuoteSpace>\r\n            <AuthorSpace>\r\n                    <p>{author}</p>\r\n            </AuthorSpace>\r\n        </WhiteBoard>\r\n    )\r\n}\r\n\r\nexport default Quotesboard","import styled from 'styled-components'\r\n\r\nexport const MenuView = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  height: 100%;\r\n  width: ${({active})=>active?'15%':'0%'};\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  box-sizing: border-box;\r\n  background-color: rgba(150,150,150,0.2);\r\n\r\n  @media (max-width: 480px) {\r\n      width: ${({active})=>active? '100%': '0%'};\r\n      background-color: rgba(150,150,150,0.9);\r\n  };\r\n  @media only screen and (min-width: 481px) and (max-width: 768px) {\r\n      width: ${({active})=>active? '30%': '0%'};\r\n      background-color: rgba(150,150,150,0.9);\r\n  };\r\n`;\r\nexport const Button = styled.button`\r\n    background-color: transparent;\r\n    color: white;\r\n    text-align: left;\r\n    border: none;\r\n    padding: 0px 10px;\r\n    :hover{\r\n        background-color: rgba(150,150,150,0.5);\r\n        font-size: 16px;\r\n    }\r\n    @media (max-width: 480px) {\r\n        text-align: center;\r\n        font-size: 25px;\r\n        :hover {\r\n            font-size: 25px;\r\n        }\r\n    }\r\n`;\r\nexport const TopMenu = styled.div``;\r\nexport const FooterMenu = styled.div``;\r\nexport const CenterMenu = styled.div`\r\n    height: 70vh;\r\n    display: grid;\r\n    grid-template-rows: repeat(7,1fr);\r\n\r\n`;\r\nexport const MenuItems = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 1fr auto 1fr;\r\n    height: 100%;\r\n    box-sizing: border-box;  \r\n`;\r\nexport const MenuAction = styled.button`\r\n    height: 100%;\r\n    outline: none;\r\n    background-color: transparent;\r\n    border: none;\r\n    color: white;\r\n    :hover{\r\n        background-color: rgba(150,150,150,0.5);\r\n    }\r\n`;\r\n","import { Button, MenuView, TopMenu, CenterMenu, FooterMenu, MenuItems, MenuAction} from './style'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { changeUrl } from '../../redux/quote/actions';\r\nimport { useState } from 'react';\r\nconst Menu = () => {\r\n    const array = useSelector((state)=>state.quote.arrButtons);\r\n    const dispatch = useDispatch();\r\n    const onClickFunction = (value)=>{  \r\n        dispatch(changeUrl(value))\r\n    }\r\n    const [door, setDoor] = useState(false);\r\n\r\n    return (\r\n         <MenuView active={door}>     \r\n            <MenuItems>\r\n                <TopMenu></TopMenu>\r\n                <CenterMenu>{\r\n                        door?\r\n                            array.map((value, ind)=>{\r\n                                return (\r\n                                    <Button key={ind} onClick={()=>{onClickFunction(value)}}>{value}</Button>\r\n                                )\r\n                            })\r\n                        : false\r\n                }\r\n                </CenterMenu>\r\n                <FooterMenu></FooterMenu>\r\n             </MenuItems>  \r\n             <MenuAction onClick={()=>setDoor(!door)}>{ door? String('<<'):String('>>')}</MenuAction>\r\n        </MenuView>\r\n    )\r\n}\r\nexport default Menu","import * as types from './types'\r\nexport const changeUrl = (url) => ({\r\n    type: types.changeUrl,\r\n    url: url\r\n})\r\n\r\nexport const changeBg = (background) => ({\r\n    type: types.changeBG,\r\n    background: background\r\n})\r\n\r\nexport const changeQuote = (quote) => ({\r\n    type: types.changeQuote,\r\n    quote: quote\r\n})\r\n\r\nexport const changeAuthor = (author) => ({\r\n    type: types.changeAuthor,\r\n    author: author\r\n})","import {HomeContainer,Image, Display} from './style'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport React, {useEffect, useState} from 'react';\r\nimport axios from 'axios'\r\nimport {changeBg, changeQuote, changeAuthor} from '../redux/quote/actions'\r\nimport Quotesboard from '../components/Quotesboard'\r\nimport Menu from '../components/Menu'\r\nconst Home = () => {\r\n  const background = useSelector((state)=>state.quote.background);\r\n  const quote = useSelector((state)=>state.quote.quote);\r\n  const author = useSelector((state)=>state.quote.author);\r\n  const url = useSelector(state=>state.quote.url);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n      setLoading(true);\r\n      axios.get(`http://quotes.rest/qod.json?category=${url}`)\r\n      .then(res=>{\r\n          dispatch(changeBg(res.data.contents.quotes[0].background));\r\n          dispatch(changeQuote(res.data.contents.quotes[0].quote));\r\n          dispatch(changeAuthor(res.data.contents.quotes[0].author));\r\n          setLoading(false);\r\n      })\r\n      .catch(err=>{ console.log(err); setLoading(false);});\r\n  },[url, dispatch]);\r\n\r\n    if (loading) return <div style={{position: 'absolute',left: '500px',top: '250px', color: 'green'}}><font size='7'>Loading :-)</font><h2>Please wait!!!</h2></div>\r\n    return (\r\n        <HomeContainer>\r\n            <Image src={background} alt=\"Loading..\"/>\r\n            <Display>\r\n                <Menu />\r\n                <Quotesboard quote={quote} author={author}/>\r\n            </Display>\r\n        </HomeContainer>\r\n    )\r\n    }\r\nexport default Home","import './App.css';\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\nimport Home from './container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n            <Home />\n        </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}